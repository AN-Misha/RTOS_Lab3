; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\init.o --asm_dir=.\obj\ --list_dir=.\obj\ --depend=.\obj\init.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I"..\CAN TEST" -I.\RTE -I.\RTE\Device -I.\RTE\Device\MDR1986BE92 -I.\rtos -I.\rtos\include -I.\RTE\Device\MDR1986BE92 -I.\RTE\_Target_1 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\MDR1986BExx\1.4\Config -IC:\Keil_v5\ARM\PACK\Keil\MDR1986BExx\1.4\Libraries\CMSIS\CM3\CoreSupport -IC:\Keil_v5\ARM\PACK\Keil\MDR1986BExx\1.4\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\inc -IC:\Keil_v5\ARM\PACK\Keil\MDR1986BExx\1.4\Libraries\MDR32F9Qx_StdPeriph_Driver\inc -D__MICROLIB -D__UVISION_VERSION=524 -D_RTE_ -DUSE_MDR32F9Q2_Rev1 --omf_browse=.\obj\init.crf init.c]
                          THUMB

                          AREA ||i.PORT_init||, CODE, READONLY, ALIGN=2

                  PORT_init PROC
;;;74      */
;;;75     void PORT_init ( void )
000000  b50e              PUSH     {r1-r3,lr}
;;;76     {
;;;77         PORT_InitTypeDef PORT_InitStructure;
;;;78         // Запуск тактирования портов контроллера
;;;79     	RST_CLK_PCLKcmd( RST_CLK_PCLK_PORTC, ENABLE);
000002  2101              MOVS     r1,#1
000004  05c8              LSLS     r0,r1,#23
000006  f7fffffe          BL       RST_CLK_PCLKcmd
;;;80        
;;;81     	// PC0, PC1 - светодиоды подключены
;;;82     	PORT_InitStructure.PORT_Pin   = PORT_Pin_0 | PORT_Pin_1 ;
00000a  2003              MOVS     r0,#3
00000c  f8ad0000          STRH     r0,[sp,#0]
;;;83     	PORT_InitStructure.PORT_OE    = PORT_OE_OUT;
000010  2001              MOVS     r0,#1
000012  f88d0002          STRB     r0,[sp,#2]
;;;84     	PORT_InitStructure.PORT_FUNC  = PORT_FUNC_PORT;
000016  2000              MOVS     r0,#0
000018  f88d0008          STRB     r0,[sp,#8]
;;;85     	PORT_InitStructure.PORT_MODE  = PORT_MODE_DIGITAL;
00001c  2001              MOVS     r0,#1
00001e  f88d000a          STRB     r0,[sp,#0xa]
;;;86     	PORT_InitStructure.PORT_SPEED = PORT_SPEED_FAST;
000022  2002              MOVS     r0,#2
000024  f88d0009          STRB     r0,[sp,#9]
;;;87     	PORT_Init(MDR_PORTC, &PORT_InitStructure);
000028  4669              MOV      r1,sp
00002a  4802              LDR      r0,|L1.52|
00002c  f7fffffe          BL       PORT_Init
;;;88     	
;;;89     }
000030  bd0e              POP      {r1-r3,pc}
;;;90     
                          ENDP

000032  0000              DCW      0x0000
                  |L1.52|
                          DCD      0x400b8000

                          AREA ||i.init||, CODE, READONLY, ALIGN=1

                  init PROC
;;;18      */
;;;19     void init ( void )
000000  b510              PUSH     {r4,lr}
;;;20     {
;;;21     	sys_clk_init();
000002  f7fffffe          BL       sys_clk_init
;;;22     	//PORT_init();
;;;23     }
000006  bd10              POP      {r4,pc}
;;;24     /* Настройка тактового сигнала центрального процессора (ЦП) микроконтроллера.
                          ENDP


                          AREA ||i.sys_clk_init||, CODE, READONLY, ALIGN=1

                  sys_clk_init PROC
;;;38        */
;;;39     void sys_clk_init(void)
000000  b510              PUSH     {r4,lr}
;;;40     {
;;;41         /* Разрешение работы внешнего высочастотного резонатора (HSE) */
;;;42         RST_CLK_HSEconfig(RST_CLK_HSE_ON);
000002  2001              MOVS     r0,#1
000004  f7fffffe          BL       RST_CLK_HSEconfig
;;;43         
;;;44         /* Проверка готовности HSE */
;;;45         if (RST_CLK_HSEstatus() == SUCCESS)
000008  f7fffffe          BL       RST_CLK_HSEstatus
00000c  2801              CMP      r0,#1
00000e  d114              BNE      |L3.58|
;;;46         {
;;;47             /* Выбор резонатора HSE для тактирования ФАПЧ ЦП (PLL_CPU) и 
;;;48                установка множителя частоты ФАПЧ на 10 */
;;;49             RST_CLK_CPU_PLLconfig(RST_CLK_CPU_PLLsrcHSEdiv1, RST_CLK_CPU_PLLmul10);
000010  2109              MOVS     r1,#9
000012  2002              MOVS     r0,#2
000014  f7fffffe          BL       RST_CLK_CPU_PLLconfig
;;;50             /* Включение ФАПЧ */
;;;51             RST_CLK_CPU_PLLcmd(ENABLE);
000018  2001              MOVS     r0,#1
00001a  f7fffffe          BL       RST_CLK_CPU_PLLcmd
;;;52             /* Проверка завершения инициализации ФАПЧ */
;;;53             if (RST_CLK_CPU_PLLstatus() == SUCCESS)
00001e  f7fffffe          BL       RST_CLK_CPU_PLLstatus
000022  2801              CMP      r0,#1
000024  d109              BNE      |L3.58|
;;;54             {
;;;55                 /* Установка предделителя тактового сигнала ЦП в 1 */
;;;56                 RST_CLK_CPUclkPrescaler(RST_CLK_CPUclkDIV1);
000026  2000              MOVS     r0,#0
000028  f7fffffe          BL       RST_CLK_CPUclkPrescaler
;;;57                 /* Подключение выхода ФАПЧ к CPU_C3*/
;;;58                 RST_CLK_CPU_PLLuse(ENABLE);
00002c  2001              MOVS     r0,#1
00002e  f7fffffe          BL       RST_CLK_CPU_PLLuse
;;;59                 /* Выбор тактового сигнала CPU_C3 для тактирования ЦП */
;;;60                 RST_CLK_CPUclkSelection(RST_CLK_CPUclkCPU_C3);
000032  f44f7080          MOV      r0,#0x100
000036  f7fffffe          BL       RST_CLK_CPUclkSelection
                  |L3.58|
;;;61             }
;;;62         }
;;;63         
;;;64         /* Обновление глобальной переменной SystemCoreClock, содержащей значение
;;;65            частоты центрального процессора. */
;;;66         SystemCoreClockUpdate();
00003a  f7fffffe          BL       SystemCoreClockUpdate
;;;67     }
00003e  bd10              POP      {r4,pc}
;;;68     
                          ENDP


;*** Start embedded assembler ***

#line 1 "init.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_init_c_init____REV16|
#line 447 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.0.1\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___6_init_c_init____REV16| PROC
#line 448

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_init_c_init____REVSH|
#line 462
|__asm___6_init_c_init____REVSH| PROC
#line 463

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___6_init_c_init____RRX|
#line 649
|__asm___6_init_c_init____RRX| PROC
#line 650

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
