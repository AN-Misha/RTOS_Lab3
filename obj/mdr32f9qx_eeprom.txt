; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\mdr32f9qx_eeprom.o --asm_dir=.\obj\ --list_dir=.\obj\ --depend=.\obj\mdr32f9qx_eeprom.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I"..\CAN TEST" -I.\RTE -I.\RTE\Device -I.\RTE\Device\MDR1986BE92 -I.\rtos -I.\rtos\include -I.\RTE\Device\MDR1986BE92 -I.\RTE\_Target_1 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\MDR1986BExx\1.4\Config -IC:\Keil_v5\ARM\PACK\Keil\MDR1986BExx\1.4\Libraries\CMSIS\CM3\CoreSupport -IC:\Keil_v5\ARM\PACK\Keil\MDR1986BExx\1.4\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\inc -IC:\Keil_v5\ARM\PACK\Keil\MDR1986BExx\1.4\Libraries\MDR32F9Qx_StdPeriph_Driver\inc -D__MICROLIB -D__UVISION_VERSION=524 -D_RTE_ -DUSE_MDR32F9Q2_Rev1 --omf_browse=.\obj\mdr32f9qx_eeprom.crf C:\Keil_v5\ARM\PACK\Keil\MDR1986BExx\1.4\Libraries\MDR32F9Qx_StdPeriph_Driver\src\MDR32F9Qx_eeprom.c]
                          THUMB

                          AREA EXECUTABLE_MEMORY_SECTION, CODE, READONLY, ALIGN=2

                  ProgramDelay PROC
;;;68       */
;;;69     __RAMFUNC static void ProgramDelay(uint32_t Loops)
000000  b508              PUSH     {r3,lr}
;;;70     {
;;;71       volatile uint32_t i = Loops;
000002  9000              STR      r0,[sp,#0]
;;;72       for (; i > 0; i--)
000004  e002              B        |L1.12|
                  |L1.6|
000006  9900              LDR      r1,[sp,#0]
000008  1e49              SUBS     r1,r1,#1
00000a  9100              STR      r1,[sp,#0]
                  |L1.12|
00000c  9900              LDR      r1,[sp,#0]
00000e  2900              CMP      r1,#0
000010  d1f9              BNE      |L1.6|
;;;73       {
;;;74       }
;;;75     }
000012  bd08              POP      {r3,pc}
;;;76     
                          ENDP

                  EEPROM_ReadByte PROC
;;;109      */
;;;110    __RAMFUNC  uint8_t EEPROM_ReadByte(uint32_t Address, uint32_t BankSelector)
000014  b570              PUSH     {r4-r6,lr}
;;;111    {
000016  4602              MOV      r2,r0
000018  460b              MOV      r3,r1
;;;112      uint32_t Data;
;;;113      uint32_t Command;
;;;114      uint32_t Shift;
;;;115    
;;;116      assert_param(IS_EEPROM_BANK_SELECTOR(BankSelector));
;;;117    
;;;118      MDR_EEPROM->KEY = EEPROM_REG_ACCESS_KEY;
00001a  48be              LDR      r0,|L1.788|
00001c  4ebe              LDR      r6,|L1.792|
00001e  6130              STR      r0,[r6,#0x10]
;;;119      Command = (MDR_EEPROM->CMD & EEPROM_CMD_DELAY_Msk) | EEPROM_CMD_CON;
000020  4630              MOV      r0,r6
000022  6800              LDR      r0,[r0,#0]
000024  f0000038          AND      r0,r0,#0x38
000028  1c41              ADDS     r1,r0,#1
;;;120      Command |= (BankSelector == EEPROM_Info_Bank_Select) ? EEPROM_CMD_IFREN : 0;
00002a  2b01              CMP      r3,#1
00002c  d101              BNE      |L1.50|
00002e  0258              LSLS     r0,r3,#9
000030  e000              B        |L1.52|
                  |L1.50|
000032  2000              MOVS     r0,#0
                  |L1.52|
000034  4301              ORRS     r1,r1,r0
;;;121      MDR_EEPROM->CMD = Command;
000036  48b8              LDR      r0,|L1.792|
000038  6001              STR      r1,[r0,#0]
;;;122      MDR_EEPROM->ADR = Address;
00003a  6042              STR      r2,[r0,#4]
;;;123      MDR_EEPROM->CMD = Command | EEPROM_CMD_XE | EEPROM_CMD_YE | EEPROM_CMD_SE;
00003c  f44170e0          ORR      r0,r1,#0x1c0
000040  4eb5              LDR      r6,|L1.792|
000042  6030              STR      r0,[r6,#0]
;;;124      MDR_EEPROM->DO;   /* Idle Reading for Delay */
000044  4630              MOV      r0,r6
000046  68c0              LDR      r0,[r0,#0xc]
;;;125      MDR_EEPROM->DO;   /* Idle Reading for Delay */
000048  4630              MOV      r0,r6
00004a  68c0              LDR      r0,[r0,#0xc]
;;;126      MDR_EEPROM->DO;   /* Idle Reading for Delay */
00004c  4630              MOV      r0,r6
00004e  68c0              LDR      r0,[r0,#0xc]
;;;127      Data = MDR_EEPROM->DO;
000050  4630              MOV      r0,r6
000052  68c5              LDR      r5,[r0,#0xc]
;;;128      Command &= EEPROM_CMD_DELAY_Msk;
000054  f0010138          AND      r1,r1,#0x38
;;;129      MDR_EEPROM->CMD = Command;
000058  6001              STR      r1,[r0,#0]
;;;130      MDR_EEPROM->KEY = 0;
00005a  2000              MOVS     r0,#0
00005c  6130              STR      r0,[r6,#0x10]
;;;131    
;;;132      Shift = (Address & 3) * 8;
00005e  0790              LSLS     r0,r2,#30
000060  0ec4              LSRS     r4,r0,#27
;;;133      Data >>= Shift;
000062  40e5              LSRS     r5,r5,r4
;;;134      return Data;
000064  b2e8              UXTB     r0,r5
;;;135    }
000066  bd70              POP      {r4-r6,pc}
;;;136    
                          ENDP

                  EEPROM_ReadHalfWord PROC
;;;145      */
;;;146    __RAMFUNC uint16_t EEPROM_ReadHalfWord(uint32_t Address, uint32_t BankSelector)
000068  b570              PUSH     {r4-r6,lr}
;;;147    {
00006a  4602              MOV      r2,r0
00006c  460b              MOV      r3,r1
;;;148      uint32_t Data;
;;;149      uint32_t Command;
;;;150      uint32_t Shift;
;;;151    
;;;152      assert_param(IS_EEPROM_BANK_SELECTOR(BankSelector));
;;;153      assert_param(IS_TWO_BYTE_ALLIGNED(Address));
;;;154    
;;;155      MDR_EEPROM->KEY = EEPROM_REG_ACCESS_KEY;
00006e  48a9              LDR      r0,|L1.788|
000070  4ea9              LDR      r6,|L1.792|
000072  6130              STR      r0,[r6,#0x10]
;;;156      Command = (MDR_EEPROM->CMD & EEPROM_CMD_DELAY_Msk) | EEPROM_CMD_CON;
000074  4630              MOV      r0,r6
000076  6800              LDR      r0,[r0,#0]
000078  f0000038          AND      r0,r0,#0x38
00007c  1c41              ADDS     r1,r0,#1
;;;157      Command |= (BankSelector == EEPROM_Info_Bank_Select) ? EEPROM_CMD_IFREN : 0;
00007e  2b01              CMP      r3,#1
000080  d101              BNE      |L1.134|
000082  0258              LSLS     r0,r3,#9
000084  e000              B        |L1.136|
                  |L1.134|
000086  2000              MOVS     r0,#0
                  |L1.136|
000088  4301              ORRS     r1,r1,r0
;;;158      MDR_EEPROM->CMD = Command;
00008a  48a3              LDR      r0,|L1.792|
00008c  6001              STR      r1,[r0,#0]
;;;159      MDR_EEPROM->ADR = Address;
00008e  6042              STR      r2,[r0,#4]
;;;160      MDR_EEPROM->CMD = Command | EEPROM_CMD_XE | EEPROM_CMD_YE | EEPROM_CMD_SE;
000090  f44170e0          ORR      r0,r1,#0x1c0
000094  4ea0              LDR      r6,|L1.792|
000096  6030              STR      r0,[r6,#0]
;;;161      MDR_EEPROM->DO;   /* Idle Reading for Delay */
000098  4630              MOV      r0,r6
00009a  68c0              LDR      r0,[r0,#0xc]
;;;162      MDR_EEPROM->DO;   /* Idle Reading for Delay */
00009c  4630              MOV      r0,r6
00009e  68c0              LDR      r0,[r0,#0xc]
;;;163      MDR_EEPROM->DO;   /* Idle Reading for Delay */
0000a0  4630              MOV      r0,r6
0000a2  68c0              LDR      r0,[r0,#0xc]
;;;164      Data = MDR_EEPROM->DO;
0000a4  4630              MOV      r0,r6
0000a6  68c5              LDR      r5,[r0,#0xc]
;;;165      Command &= EEPROM_CMD_DELAY_Msk;
0000a8  f0010138          AND      r1,r1,#0x38
;;;166      MDR_EEPROM->CMD = Command;
0000ac  6001              STR      r1,[r0,#0]
;;;167      MDR_EEPROM->KEY = 0;
0000ae  2000              MOVS     r0,#0
0000b0  6130              STR      r0,[r6,#0x10]
;;;168    
;;;169      Shift = (Address & 2) * 8;
0000b2  f0020002          AND      r0,r2,#2
0000b6  00c4              LSLS     r4,r0,#3
;;;170      Data >>= Shift;
0000b8  40e5              LSRS     r5,r5,r4
;;;171      return Data;
0000ba  b2a8              UXTH     r0,r5
;;;172    }
0000bc  bd70              POP      {r4-r6,pc}
;;;173    
                          ENDP

                  EEPROM_ReadWord PROC
;;;182      */
;;;183    __RAMFUNC uint32_t EEPROM_ReadWord(uint32_t Address, uint32_t BankSelector)
0000be  b530              PUSH     {r4,r5,lr}
;;;184    {
0000c0  4602              MOV      r2,r0
0000c2  460b              MOV      r3,r1
;;;185      uint32_t Command;
;;;186      uint32_t Data;
;;;187    
;;;188      assert_param(IS_EEPROM_BANK_SELECTOR(BankSelector));
;;;189      assert_param(IS_FOUR_BYTE_ALLIGNED(Address));
;;;190    
;;;191      MDR_EEPROM->KEY = EEPROM_REG_ACCESS_KEY;
0000c4  4c93              LDR      r4,|L1.788|
0000c6  4d94              LDR      r5,|L1.792|
0000c8  612c              STR      r4,[r5,#0x10]
;;;192      Command = (MDR_EEPROM->CMD & EEPROM_CMD_DELAY_Msk) | EEPROM_CMD_CON;
0000ca  462c              MOV      r4,r5
0000cc  6824              LDR      r4,[r4,#0]
0000ce  f0040438          AND      r4,r4,#0x38
0000d2  1c61              ADDS     r1,r4,#1
;;;193      Command |= (BankSelector == EEPROM_Info_Bank_Select) ? EEPROM_CMD_IFREN : 0;
0000d4  2b01              CMP      r3,#1
0000d6  d101              BNE      |L1.220|
0000d8  025c              LSLS     r4,r3,#9
0000da  e000              B        |L1.222|
                  |L1.220|
0000dc  2400              MOVS     r4,#0
                  |L1.222|
0000de  4321              ORRS     r1,r1,r4
;;;194      MDR_EEPROM->CMD = Command;
0000e0  4c8d              LDR      r4,|L1.792|
0000e2  6021              STR      r1,[r4,#0]
;;;195      MDR_EEPROM->ADR = Address;
0000e4  6062              STR      r2,[r4,#4]
;;;196      MDR_EEPROM->CMD = Command | EEPROM_CMD_XE | EEPROM_CMD_YE | EEPROM_CMD_SE;
0000e6  f44174e0          ORR      r4,r1,#0x1c0
0000ea  4d8b              LDR      r5,|L1.792|
0000ec  602c              STR      r4,[r5,#0]
;;;197      MDR_EEPROM->DO;   /* Idle Reading for Delay */
0000ee  462c              MOV      r4,r5
0000f0  68e4              LDR      r4,[r4,#0xc]
;;;198      MDR_EEPROM->DO;   /* Idle Reading for Delay */
0000f2  462c              MOV      r4,r5
0000f4  68e4              LDR      r4,[r4,#0xc]
;;;199      MDR_EEPROM->DO;   /* Idle Reading for Delay */
0000f6  462c              MOV      r4,r5
0000f8  68e4              LDR      r4,[r4,#0xc]
;;;200      Data = MDR_EEPROM->DO;
0000fa  462c              MOV      r4,r5
0000fc  68e0              LDR      r0,[r4,#0xc]
;;;201      Command &= EEPROM_CMD_DELAY_Msk;
0000fe  f0010138          AND      r1,r1,#0x38
;;;202      MDR_EEPROM->CMD = Command;
000102  6021              STR      r1,[r4,#0]
;;;203      MDR_EEPROM->KEY = 0;
000104  2400              MOVS     r4,#0
000106  612c              STR      r4,[r5,#0x10]
;;;204      return Data;
;;;205    }
000108  bd30              POP      {r4,r5,pc}
;;;206    
                          ENDP

                  EEPROM_ErasePage PROC
;;;215      */
;;;216    __RAMFUNC void EEPROM_ErasePage(uint32_t Address, uint32_t BankSelector)
00010a  e92d41f0          PUSH     {r4-r8,lr}
;;;217    {
00010e  4606              MOV      r6,r0
000110  460f              MOV      r7,r1
;;;218      uint32_t Command;
;;;219      uint32_t Offset;
;;;220    
;;;221      assert_param(IS_EEPROM_BANK_SELECTOR(BankSelector));
;;;222    
;;;223      MDR_EEPROM->KEY = EEPROM_REG_ACCESS_KEY;
000112  4880              LDR      r0,|L1.788|
000114  4980              LDR      r1,|L1.792|
000116  6108              STR      r0,[r1,#0x10]
;;;224      Command = (MDR_EEPROM->CMD & EEPROM_CMD_DELAY_Msk) | EEPROM_CMD_CON;
000118  4608              MOV      r0,r1
00011a  6800              LDR      r0,[r0,#0]
00011c  f0000038          AND      r0,r0,#0x38
000120  1c44              ADDS     r4,r0,#1
;;;225      Command |= (BankSelector == EEPROM_Info_Bank_Select) ? EEPROM_CMD_IFREN : 0;
000122  2f01              CMP      r7,#1
000124  d101              BNE      |L1.298|
000126  1548              ASRS     r0,r1,#21
000128  e000              B        |L1.300|
                  |L1.298|
00012a  2000              MOVS     r0,#0
                  |L1.300|
00012c  4304              ORRS     r4,r4,r0
;;;226      MDR_EEPROM->CMD = Command;
00012e  487a              LDR      r0,|L1.792|
000130  6004              STR      r4,[r0,#0]
;;;227    
;;;228      for (Offset = 0; Offset < (4 << 2); Offset += 4)
000132  2500              MOVS     r5,#0
000134  e022              B        |L1.380|
                  |L1.310|
;;;229      {
;;;230        MDR_EEPROM->ADR = Address + Offset;             /* Page Address */
000136  1970              ADDS     r0,r6,r5
000138  4977              LDR      r1,|L1.792|
00013a  6048              STR      r0,[r1,#4]
;;;231        MDR_EEPROM->DI = 0;
00013c  2000              MOVS     r0,#0
00013e  6088              STR      r0,[r1,#8]
;;;232        Command |= EEPROM_CMD_XE | EEPROM_CMD_ERASE;
000140  f4446488          ORR      r4,r4,#0x440
;;;233        MDR_EEPROM->CMD = Command;
000144  4608              MOV      r0,r1
000146  6004              STR      r4,[r0,#0]
;;;234        ProgramDelay(GET_US_LOOPS(5));              /* Wait for 5 us */
000148  2005              MOVS     r0,#5
00014a  f7fffffe          BL       ProgramDelay
;;;235        Command |= EEPROM_CMD_NVSTR;
00014e  f4445400          ORR      r4,r4,#0x2000
;;;236        MDR_EEPROM->CMD = Command;
000152  4871              LDR      r0,|L1.792|
000154  6004              STR      r4,[r0,#0]
;;;237        ProgramDelay(GET_US_LOOPS(40000));          /* Wait for 40 ms */
000156  f6494040          MOV      r0,#0x9c40
00015a  f7fffffe          BL       ProgramDelay
;;;238        Command &= ~EEPROM_CMD_ERASE;
00015e  f4246480          BIC      r4,r4,#0x400
;;;239        MDR_EEPROM->CMD = Command;
000162  486d              LDR      r0,|L1.792|
000164  6004              STR      r4,[r0,#0]
;;;240        ProgramDelay(GET_US_LOOPS(5));              /* Wait for 5 us */
000166  2005              MOVS     r0,#5
000168  f7fffffe          BL       ProgramDelay
;;;241        Command &= ~(EEPROM_CMD_XE | EEPROM_CMD_NVSTR);
00016c  f4245401          BIC      r4,r4,#0x2040
;;;242        MDR_EEPROM->CMD = Command;
000170  4869              LDR      r0,|L1.792|
000172  6004              STR      r4,[r0,#0]
;;;243        ProgramDelay(GET_US_LOOPS(1));              /* Wait for 1 us */
000174  2001              MOVS     r0,#1
000176  f7fffffe          BL       ProgramDelay
00017a  1d2d              ADDS     r5,r5,#4              ;228
                  |L1.380|
00017c  2d10              CMP      r5,#0x10              ;228
00017e  d3da              BCC      |L1.310|
;;;244      }
;;;245      Command &= EEPROM_CMD_DELAY_Msk;
000180  f0040438          AND      r4,r4,#0x38
;;;246      MDR_EEPROM->CMD = Command;
000184  4864              LDR      r0,|L1.792|
000186  6004              STR      r4,[r0,#0]
;;;247      MDR_EEPROM->KEY = 0;
000188  2000              MOVS     r0,#0
00018a  4963              LDR      r1,|L1.792|
00018c  6108              STR      r0,[r1,#0x10]
;;;248    }
00018e  e8bd81f0          POP      {r4-r8,pc}
;;;249    
                          ENDP

                  EEPROM_EraseAllPages PROC
;;;257      */
;;;258    __RAMFUNC void EEPROM_EraseAllPages(uint32_t BankSelector)
000192  b570              PUSH     {r4-r6,lr}
;;;259    {
000194  4606              MOV      r6,r0
;;;260      uint32_t Command;
;;;261      uint32_t Offset;
;;;262    
;;;263      assert_param(IS_EEPROM_ERASE_SELECTOR(BankSelector));
;;;264    
;;;265      MDR_EEPROM->KEY = EEPROM_REG_ACCESS_KEY;
000196  485f              LDR      r0,|L1.788|
000198  495f              LDR      r1,|L1.792|
00019a  6108              STR      r0,[r1,#0x10]
;;;266      Command = (MDR_EEPROM->CMD & EEPROM_CMD_DELAY_Msk) | EEPROM_CMD_CON;
00019c  4608              MOV      r0,r1
00019e  6800              LDR      r0,[r0,#0]
0001a0  f0000038          AND      r0,r0,#0x38
0001a4  1c44              ADDS     r4,r0,#1
;;;267      Command |= (BankSelector == EEPROM_All_Banks_Select) ? EEPROM_CMD_IFREN : 0;
0001a6  2e02              CMP      r6,#2
0001a8  d101              BNE      |L1.430|
0001aa  1548              ASRS     r0,r1,#21
0001ac  e000              B        |L1.432|
                  |L1.430|
0001ae  2000              MOVS     r0,#0
                  |L1.432|
0001b0  4304              ORRS     r4,r4,r0
;;;268    
;;;269      MDR_EEPROM->CMD = Command;
0001b2  4859              LDR      r0,|L1.792|
0001b4  6004              STR      r4,[r0,#0]
;;;270    
;;;271      for (Offset = 0; Offset < (4 << 2); Offset += 4)
0001b6  2500              MOVS     r5,#0
0001b8  e022              B        |L1.512|
                  |L1.442|
;;;272      {
;;;273        MDR_EEPROM->ADR = Offset;
0001ba  4857              LDR      r0,|L1.792|
0001bc  6045              STR      r5,[r0,#4]
;;;274        MDR_EEPROM->DI = 0;
0001be  2000              MOVS     r0,#0
0001c0  4955              LDR      r1,|L1.792|
0001c2  6088              STR      r0,[r1,#8]
;;;275        Command |= EEPROM_CMD_XE | EEPROM_CMD_MAS1 | EEPROM_CMD_ERASE;
0001c4  f4446444          ORR      r4,r4,#0xc40
;;;276        MDR_EEPROM->CMD = Command;
0001c8  4608              MOV      r0,r1
0001ca  6004              STR      r4,[r0,#0]
;;;277        ProgramDelay(GET_US_LOOPS(5));                /* Wait for 5 us */
0001cc  2005              MOVS     r0,#5
0001ce  f7fffffe          BL       ProgramDelay
;;;278        Command |= EEPROM_CMD_NVSTR;
0001d2  f4445400          ORR      r4,r4,#0x2000
;;;279        MDR_EEPROM->CMD = Command;
0001d6  4850              LDR      r0,|L1.792|
0001d8  6004              STR      r4,[r0,#0]
;;;280        ProgramDelay(GET_US_LOOPS(40000));            /* Wait for 40 ms */
0001da  f6494040          MOV      r0,#0x9c40
0001de  f7fffffe          BL       ProgramDelay
;;;281        Command &= ~EEPROM_CMD_ERASE;
0001e2  f4246480          BIC      r4,r4,#0x400
;;;282        MDR_EEPROM->CMD = Command;
0001e6  484c              LDR      r0,|L1.792|
0001e8  6004              STR      r4,[r0,#0]
;;;283        ProgramDelay(GET_US_LOOPS(100));              /* Wait for 100 us */
0001ea  2064              MOVS     r0,#0x64
0001ec  f7fffffe          BL       ProgramDelay
;;;284        Command &= ~(EEPROM_CMD_XE | EEPROM_CMD_MAS1 | EEPROM_CMD_NVSTR);
0001f0  f4245421          BIC      r4,r4,#0x2840
;;;285        MDR_EEPROM->CMD = Command;
0001f4  4848              LDR      r0,|L1.792|
0001f6  6004              STR      r4,[r0,#0]
;;;286        ProgramDelay(GET_US_LOOPS(1));                /* Wait for 1 us */
0001f8  2001              MOVS     r0,#1
0001fa  f7fffffe          BL       ProgramDelay
0001fe  1d2d              ADDS     r5,r5,#4              ;271
                  |L1.512|
000200  2d10              CMP      r5,#0x10              ;271
000202  d3da              BCC      |L1.442|
;;;287      }
;;;288      Command &= EEPROM_CMD_DELAY_Msk;
000204  f0040438          AND      r4,r4,#0x38
;;;289      MDR_EEPROM->CMD = Command;
000208  4843              LDR      r0,|L1.792|
00020a  6004              STR      r4,[r0,#0]
;;;290      MDR_EEPROM->KEY = 0;
00020c  2000              MOVS     r0,#0
00020e  4942              LDR      r1,|L1.792|
000210  6108              STR      r0,[r1,#0x10]
;;;291    }
000212  bd70              POP      {r4-r6,pc}
;;;292    
                          ENDP

                  EEPROM_ProgramWord PROC
;;;353      */
;;;354    __RAMFUNC void EEPROM_ProgramWord(uint32_t Address, uint32_t BankSelector, uint32_t Data)
000214  e92d41f0          PUSH     {r4-r8,lr}
;;;355    {
000218  4606              MOV      r6,r0
00021a  460d              MOV      r5,r1
00021c  4617              MOV      r7,r2
;;;356      uint32_t Command;
;;;357    
;;;358      assert_param(IS_EEPROM_BANK_SELECTOR(BankSelector));
;;;359      assert_param(IS_FOUR_BYTE_ALLIGNED(Address));
;;;360    
;;;361      MDR_EEPROM->KEY = EEPROM_REG_ACCESS_KEY;
00021e  483d              LDR      r0,|L1.788|
000220  493d              LDR      r1,|L1.792|
000222  6108              STR      r0,[r1,#0x10]
;;;362      BankSelector = (BankSelector == EEPROM_Info_Bank_Select) ? EEPROM_CMD_IFREN : 0;
000224  2d01              CMP      r5,#1
000226  d101              BNE      |L1.556|
000228  1548              ASRS     r0,r1,#21
00022a  e000              B        |L1.558|
                  |L1.556|
00022c  2000              MOVS     r0,#0
                  |L1.558|
00022e  4605              MOV      r5,r0
;;;363      Command = MDR_EEPROM->CMD & EEPROM_CMD_DELAY_Msk;
000230  4839              LDR      r0,|L1.792|
000232  6800              LDR      r0,[r0,#0]
000234  f0000438          AND      r4,r0,#0x38
;;;364      Command |= EEPROM_CMD_CON | BankSelector;
000238  f0450001          ORR      r0,r5,#1
00023c  4304              ORRS     r4,r4,r0
;;;365      MDR_EEPROM->CMD = Command;
00023e  4836              LDR      r0,|L1.792|
000240  6004              STR      r4,[r0,#0]
;;;366      MDR_EEPROM->ADR = Address;
000242  6046              STR      r6,[r0,#4]
;;;367      MDR_EEPROM->DI  = Data;
000244  6087              STR      r7,[r0,#8]
;;;368      Command |= EEPROM_CMD_XE | EEPROM_CMD_PROG;
000246  f4445482          ORR      r4,r4,#0x1040
;;;369      MDR_EEPROM->CMD = Command;
00024a  6004              STR      r4,[r0,#0]
;;;370      ProgramDelay(GET_US_LOOPS(5));                /* Wait for 5 us */
00024c  2005              MOVS     r0,#5
00024e  f7fffffe          BL       ProgramDelay
;;;371      Command |= EEPROM_CMD_NVSTR;
000252  f4445400          ORR      r4,r4,#0x2000
;;;372      MDR_EEPROM->CMD = Command;
000256  4830              LDR      r0,|L1.792|
000258  6004              STR      r4,[r0,#0]
;;;373      ProgramDelay(GET_US_LOOPS(10));               /* Wait for 10 us */
00025a  200a              MOVS     r0,#0xa
00025c  f7fffffe          BL       ProgramDelay
;;;374      Command |= EEPROM_CMD_YE;
000260  f0440480          ORR      r4,r4,#0x80
;;;375      MDR_EEPROM->CMD = Command;
000264  482c              LDR      r0,|L1.792|
000266  6004              STR      r4,[r0,#0]
;;;376      ProgramDelay(GET_US_LOOPS(40));               /* Wait for 40 us */
000268  2028              MOVS     r0,#0x28
00026a  f7fffffe          BL       ProgramDelay
;;;377      Command &= ~EEPROM_CMD_YE;
00026e  f0240480          BIC      r4,r4,#0x80
;;;378      MDR_EEPROM->CMD = Command;
000272  4829              LDR      r0,|L1.792|
000274  6004              STR      r4,[r0,#0]
;;;379      Command &= ~EEPROM_CMD_PROG;
000276  f4245480          BIC      r4,r4,#0x1000
;;;380      MDR_EEPROM->CMD = Command;
00027a  6004              STR      r4,[r0,#0]
;;;381      ProgramDelay(GET_US_LOOPS(5));                /* Wait for 5 us */
00027c  2005              MOVS     r0,#5
00027e  f7fffffe          BL       ProgramDelay
;;;382      Command &= ~(EEPROM_CMD_XE | EEPROM_CMD_NVSTR);
000282  f4245401          BIC      r4,r4,#0x2040
;;;383      MDR_EEPROM->CMD = Command;
000286  4824              LDR      r0,|L1.792|
000288  6004              STR      r4,[r0,#0]
;;;384      ProgramDelay(GET_US_LOOPS(1));                /* Wait for 1 us */
00028a  2001              MOVS     r0,#1
00028c  f7fffffe          BL       ProgramDelay
;;;385    
;;;386      MDR_EEPROM->CMD = Command & EEPROM_CMD_DELAY_Msk;
000290  f0040038          AND      r0,r4,#0x38
000294  4920              LDR      r1,|L1.792|
000296  6008              STR      r0,[r1,#0]
;;;387      MDR_EEPROM->KEY = 0;
000298  2000              MOVS     r0,#0
00029a  6108              STR      r0,[r1,#0x10]
;;;388    }
00029c  e8bd81f0          POP      {r4-r8,pc}
;;;389    
                          ENDP

                  EEPROM_ProgramByte PROC
;;;302      */
;;;303    __RAMFUNC void EEPROM_ProgramByte(uint32_t Address, uint32_t BankSelector, uint32_t Data)
0002a0  e92d47f0          PUSH     {r4-r10,lr}
;;;304    {
0002a4  4605              MOV      r5,r0
0002a6  4688              MOV      r8,r1
0002a8  4614              MOV      r4,r2
;;;305      uint32_t Mask;
;;;306      uint32_t Tmp;
;;;307      uint32_t Shift;
;;;308    
;;;309      assert_param(IS_EEPROM_BANK_SELECTOR(BankSelector));
;;;310    
;;;311      Shift = (Address & 3) * 8;
0002aa  07a8              LSLS     r0,r5,#30
0002ac  0ec7              LSRS     r7,r0,#27
;;;312      Data = Data << Shift;
0002ae  40bc              LSLS     r4,r4,r7
;;;313      Mask = 0xFF << Shift;
0002b0  20ff              MOVS     r0,#0xff
0002b2  fa00f607          LSL      r6,r0,r7
;;;314      Tmp = EEPROM_ReadWord(Address, BankSelector);
0002b6  4641              MOV      r1,r8
0002b8  4628              MOV      r0,r5
0002ba  f7fffffe          BL       EEPROM_ReadWord
0002be  4681              MOV      r9,r0
;;;315      EEPROM_ProgramWord(Address, BankSelector, (Tmp & ~Mask) | (Data & Mask));
0002c0  ea290006          BIC      r0,r9,r6
0002c4  ea040106          AND      r1,r4,r6
0002c8  ea400201          ORR      r2,r0,r1
0002cc  4641              MOV      r1,r8
0002ce  4628              MOV      r0,r5
0002d0  f7fffffe          BL       EEPROM_ProgramWord
;;;316    }
0002d4  e8bd87f0          POP      {r4-r10,pc}
;;;317    
                          ENDP

                  EEPROM_ProgramHalfWord PROC
;;;327      */
;;;328    __RAMFUNC void EEPROM_ProgramHalfWord(uint32_t Address, uint32_t BankSelector, uint32_t Data)
0002d8  e92d47f0          PUSH     {r4-r10,lr}
;;;329    {
0002dc  4605              MOV      r5,r0
0002de  4688              MOV      r8,r1
0002e0  4614              MOV      r4,r2
;;;330      uint32_t Mask;
;;;331      uint32_t Tmp;
;;;332      uint32_t Shift;
;;;333    
;;;334      assert_param(IS_EEPROM_BANK_SELECTOR(BankSelector));
;;;335      assert_param(IS_TWO_BYTE_ALLIGNED(Address));
;;;336    
;;;337      Shift = (Address & 2) * 8;
0002e2  f0050002          AND      r0,r5,#2
0002e6  00c7              LSLS     r7,r0,#3
;;;338      Data = Data << Shift;
0002e8  40bc              LSLS     r4,r4,r7
;;;339      Mask = 0xFFFF << Shift;
0002ea  f64f70ff          MOV      r0,#0xffff
0002ee  fa00f607          LSL      r6,r0,r7
;;;340      Tmp = EEPROM_ReadWord(Address, BankSelector);
0002f2  4641              MOV      r1,r8
0002f4  4628              MOV      r0,r5
0002f6  f7fffffe          BL       EEPROM_ReadWord
0002fa  4681              MOV      r9,r0
;;;341      EEPROM_ProgramWord(Address, BankSelector, (Tmp & ~Mask) | (Data & Mask));
0002fc  ea290006          BIC      r0,r9,r6
000300  ea040106          AND      r1,r4,r6
000304  ea400201          ORR      r2,r0,r1
000308  4641              MOV      r1,r8
00030a  4628              MOV      r0,r5
00030c  f7fffffe          BL       EEPROM_ProgramWord
;;;342    }
000310  e8bd87f0          POP      {r4-r10,pc}
;;;343    
                          ENDP

                  |L1.788|
                          DCD      0x8aaa5551
                  |L1.792|
                          DCD      0x40018000

                          AREA ||i.EEPROM_SetLatency||, CODE, READONLY, ALIGN=2

                  EEPROM_SetLatency PROC
;;;91       */
;;;92     void EEPROM_SetLatency ( uint32_t EEPROM_Latency )
000000  4901              LDR      r1,|L2.8|
;;;93     {
;;;94       /* Check the parameters */
;;;95       assert_param(IS_EEPROM_LATENCY(EEPROM_Latency));
;;;96     
;;;97       /* Set the new latency value */
;;;98       MDR_EEPROM->CMD = EEPROM_Latency;
000002  6008              STR      r0,[r1,#0]
;;;99     }
000004  4770              BX       lr
;;;100    
                          ENDP

000006  0000              DCW      0x0000
                  |L2.8|
                          DCD      0x40018000

;*** Start embedded assembler ***

#line 1 "C:\\Keil_v5\\ARM\\PACK\\Keil\\MDR1986BExx\\1.4\\Libraries\\MDR32F9Qx_StdPeriph_Driver\\src\\MDR32F9Qx_eeprom.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___18_MDR32F9Qx_eeprom_c_aa8f9099____REV16|
#line 447 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.0.1\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___18_MDR32F9Qx_eeprom_c_aa8f9099____REV16| PROC
#line 448

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___18_MDR32F9Qx_eeprom_c_aa8f9099____REVSH|
#line 462
|__asm___18_MDR32F9Qx_eeprom_c_aa8f9099____REVSH| PROC
#line 463

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___18_MDR32F9Qx_eeprom_c_aa8f9099____RRX|
#line 649
|__asm___18_MDR32F9Qx_eeprom_c_aa8f9099____RRX| PROC
#line 650

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
