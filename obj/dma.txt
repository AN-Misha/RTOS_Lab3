; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\dma.o --asm_dir=.\obj\ --list_dir=.\obj\ --depend=.\obj\dma.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I"..\CAN TEST" -I.\RTE -I.\RTE\Device -I.\RTE\Device\MDR1986BE92 -I.\rtos -I.\rtos\include -I.\RTE\Device\MDR1986BE92 -I.\RTE\_Target_1 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\MDR1986BExx\1.4\Config -IC:\Keil_v5\ARM\PACK\Keil\MDR1986BExx\1.4\Libraries\CMSIS\CM3\CoreSupport -IC:\Keil_v5\ARM\PACK\Keil\MDR1986BExx\1.4\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\inc -IC:\Keil_v5\ARM\PACK\Keil\MDR1986BExx\1.4\Libraries\MDR32F9Qx_StdPeriph_Driver\inc -D__MICROLIB -D__UVISION_VERSION=524 -D_RTE_ -DUSE_MDR32F9Q2_Rev1 --omf_browse=.\obj\dma.crf dma.c]
                          THUMB

                          AREA ||i.DMA_init||, CODE, READONLY, ALIGN=2

                  DMA_init PROC
;;;33     
;;;34     void DMA_init(void)
000000  b510              PUSH     {r4,lr}
;;;35     {
;;;36     
;;;37     	// Разрешить тактирование DMA и обязательно интерфейсов SSP1 и SSP2
;;;38     	RST_CLK_PCLKcmd (RST_CLK_PCLK_DMA | RST_CLK_PCLK_SSP1 |
000002  2101              MOVS     r1,#1
000004  482a              LDR      r0,|L1.176|
000006  f7fffffe          BL       RST_CLK_PCLKcmd
;;;39     	RST_CLK_PCLK_SSP2, ENABLE);
;;;40     	// Запретить все прерывания, в том числе от SSP1 и SSP2
;;;41     //	NVIC->ICPR[0] = 0xFFFFFFFF;
;;;42     //	NVIC->ICER[0] = 0xFFFFFFFF;
;;;43     	// Сбросить все настройки DMA
;;;44     	DMA_DeInit();
00000a  f7fffffe          BL       DMA_DeInit
;;;45     	DMA_StructInit (&DMA_Channel_InitStructure);
00000e  4829              LDR      r0,|L1.180|
000010  f7fffffe          BL       DMA_StructInit
;;;46     	/* Настройка первичной конфигурации канала DMA */
;;;47       /* Источник данных DMA - регистр данных АЦП1 */
;;;48     	DMA_InitStructure.DMA_SourceBaseAddr = (uint32_t)(&(MDR_ADC->ADC1_RESULT));
000014  4828              LDR      r0,|L1.184|
000016  4929              LDR      r1,|L1.188|
000018  6008              STR      r0,[r1,#0]  ; DMA_InitStructure
;;;49     	/* Приемник данных DMA - массив ADC_Buffer_ping */
;;;50     	DMA_InitStructure.DMA_DestBaseAddr = (uint32_t) &ADC_Buffer_ping;
00001a  4829              LDR      r0,|L1.192|
00001c  6048              STR      r0,[r1,#4]  ; DMA_InitStructure
;;;51     	/* Задание размер буффера (массива) результата измерений ADC_BUFFER_SIZE
;;;52     	Количество циклов запуска DMA*/
;;;53     	DMA_InitStructure.DMA_CycleSize = ADC_BUFFER_SIZE;
00001e  f44f7080          MOV      r0,#0x100
000022  6188              STR      r0,[r1,#0x18]  ; DMA_InitStructure
;;;54     	/* Не увеличиваем адрес источника данных */
;;;55     	DMA_InitStructure.DMA_SourceIncSize = DMA_SourceIncNo;
000024  f04f6040          MOV      r0,#0xc000000
000028  6088              STR      r0,[r1,#8]  ; DMA_InitStructure
;;;56     	/* Увеличение адреса приемника на 2 байта (полслова) каждую пересылку */
;;;57     	DMA_InitStructure.DMA_DestIncSize = DMA_DestIncHalfword;
00002a  f04f4080          MOV      r0,#0x40000000
00002e  60c8              STR      r0,[r1,#0xc]  ; DMA_InitStructure
;;;58     	/* Выравнивание данных по 2 байта */
;;;59     	DMA_InitStructure.DMA_MemoryDataSize =DMA_MemoryDataSize_HalfWord;
000030  f04f5088          MOV      r0,#0x11000000
000034  6108              STR      r0,[r1,#0x10]  ; DMA_InitStructure
;;;60     	/* Однократная передача полного цикла */
;;;61     	DMA_InitStructure.DMA_NumContinuous = DMA_Transfers_1;
000036  2000              MOVS     r0,#0
000038  61c8              STR      r0,[r1,#0x1c]  ; DMA_InitStructure
;;;62     	DMA_InitStructure.DMA_SourceProtCtrl = DMA_SourcePrivileged;
00003a  f44f2080          MOV      r0,#0x40000
00003e  6208              STR      r0,[r1,#0x20]  ; DMA_InitStructure
;;;63     	DMA_InitStructure.DMA_DestProtCtrl = DMA_DestPrivileged;
000040  00c0              LSLS     r0,r0,#3
000042  6248              STR      r0,[r1,#0x24]  ; DMA_InitStructure
;;;64     	// Базовый режим работы DMA
;;;65     	DMA_InitStructure.DMA_Mode = DMA_Mode_Basic;
000044  2001              MOVS     r0,#1
000046  6148              STR      r0,[r1,#0x14]  ; DMA_InitStructure
;;;66     	// Настройка канала DMA
;;;67     	// Задать структуру канала DMA
;;;68     	DMA_Channel_InitStructure.DMA_PriCtrlData = &DMA_InitStructure;
000048  4608              MOV      r0,r1
00004a  491a              LDR      r1,|L1.180|
00004c  6008              STR      r0,[r1,#0]  ; DMA_Channel_InitStructure
;;;69     	DMA_Channel_InitStructure.DMA_Priority = DMA_Priority_Default;
00004e  2000              MOVS     r0,#0
000050  7308              STRB     r0,[r1,#0xc]
;;;70     	// Снятие запретов на одиночные запросы к DMA
;;;71     	DMA_Channel_InitStructure.DMA_UseBurst = DMA_BurstClear;
000052  7348              STRB     r0,[r1,#0xd]
;;;72     	DMA_Channel_InitStructure.DMA_SelectDataStructure = DMA_CTRL_DATA_PRIMARY;
000054  7388              STRB     r0,[r1,#0xe]
;;;73     	// Инициализировать канал	DMA 
;;;74     	DMA_Init (DMA_Channel_ADC1, &DMA_Channel_InitStructure);
000056  2008              MOVS     r0,#8
000058  f7fffffe          BL       DMA_Init
;;;75     	//Снятие запретов на запросы к DMA со стороны АЦП1 (заплатка к МК Миландр)
;;;76     	MDR_DMA->CHNL_REQ_MASK_CLR = 1 << DMA_Channel_ADC1;
00005c  f44f7080          MOV      r0,#0x100
000060  4918              LDR      r1,|L1.196|
000062  6248              STR      r0,[r1,#0x24]
;;;77     	MDR_DMA->CHNL_USEBURST_CLR = 1 << DMA_Channel_ADC1;
000064  61c8              STR      r0,[r1,#0x1c]
;;;78     	// Задать приоритет аппаратного прерывания от DMA
;;;79       NVIC_SetPriority (DMA_IRQn, 4);
000066  2005              MOVS     r0,#5
000068  2104              MOVS     r1,#4
00006a  2800              CMP      r0,#0
00006c  db04              BLT      |L1.120|
00006e  074a              LSLS     r2,r1,#29
000070  0e13              LSRS     r3,r2,#24
000072  4a15              LDR      r2,|L1.200|
000074  5413              STRB     r3,[r2,r0]
000076  e006              B        |L1.134|
                  |L1.120|
000078  074a              LSLS     r2,r1,#29
00007a  0e14              LSRS     r4,r2,#24
00007c  4a13              LDR      r2,|L1.204|
00007e  f000030f          AND      r3,r0,#0xf
000082  1f1b              SUBS     r3,r3,#4
000084  54d4              STRB     r4,[r2,r3]
                  |L1.134|
000086  bf00              NOP      
;;;80     	// Разрешить прерывания от DMA
;;;81     	NVIC_EnableIRQ (DMA_IRQn);
000088  2005              MOVS     r0,#5
00008a  2800              CMP      r0,#0
00008c  db09              BLT      |L1.162|
00008e  f000021f          AND      r2,r0,#0x1f
000092  2101              MOVS     r1,#1
000094  4091              LSLS     r1,r1,r2
000096  0942              LSRS     r2,r0,#5
000098  0092              LSLS     r2,r2,#2
00009a  f10222e0          ADD      r2,r2,#0xe000e000
00009e  f8c21100          STR      r1,[r2,#0x100]
                  |L1.162|
0000a2  bf00              NOP      
;;;82     	// Разрешить работу DMA с каналом АЦП1
;;;83     	DMA_Cmd (DMA_Channel_ADC1, ENABLE);
0000a4  2101              MOVS     r1,#1
0000a6  2008              MOVS     r0,#8
0000a8  f7fffffe          BL       DMA_Cmd
;;;84         
;;;85     
;;;86     }
0000ac  bd10              POP      {r4,pc}
;;;87     
                          ENDP

0000ae  0000              DCW      0x0000
                  |L1.176|
                          DCD      0x00100120
                  |L1.180|
                          DCD      DMA_Channel_InitStructure
                  |L1.184|
                          DCD      0x40088018
                  |L1.188|
                          DCD      DMA_InitStructure
                  |L1.192|
                          DCD      ADC_Buffer_ping
                  |L1.196|
                          DCD      0x40028000
                  |L1.200|
                          DCD      0xe000e400
                  |L1.204|
                          DCD      0xe000ed18

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  DMA_InitStructure
                          %        40
                  DMA_Channel_InitStructure
                          %        16

;*** Start embedded assembler ***

#line 1 "dma.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_dma_c_DMA_init____REV16|
#line 447 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.0.1\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___5_dma_c_DMA_init____REV16| PROC
#line 448

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_dma_c_DMA_init____REVSH|
#line 462
|__asm___5_dma_c_DMA_init____REVSH| PROC
#line 463

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___5_dma_c_DMA_init____RRX|
#line 649
|__asm___5_dma_c_DMA_init____RRX| PROC
#line 650

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
