; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\mdr32f9qx_iwdg.o --asm_dir=.\obj\ --list_dir=.\obj\ --depend=.\obj\mdr32f9qx_iwdg.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I"..\CAN TEST" -I.\RTE -I.\RTE\Device -I.\RTE\Device\MDR1986BE92 -I.\rtos -I.\rtos\include -I.\RTE\Device\MDR1986BE92 -I.\RTE\_Target_1 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\MDR1986BExx\1.4\Config -IC:\Keil_v5\ARM\PACK\Keil\MDR1986BExx\1.4\Libraries\CMSIS\CM3\CoreSupport -IC:\Keil_v5\ARM\PACK\Keil\MDR1986BExx\1.4\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\inc -IC:\Keil_v5\ARM\PACK\Keil\MDR1986BExx\1.4\Libraries\MDR32F9Qx_StdPeriph_Driver\inc -D__MICROLIB -D__UVISION_VERSION=524 -D_RTE_ -DUSE_MDR32F9Q2_Rev1 --omf_browse=.\obj\mdr32f9qx_iwdg.crf C:\Keil_v5\ARM\PACK\Keil\MDR1986BExx\1.4\Libraries\MDR32F9Qx_StdPeriph_Driver\src\MDR32F9Qx_iwdg.c]
                          THUMB

                          AREA ||i.IWDG_Enable||, CODE, READONLY, ALIGN=2

                  IWDG_Enable PROC
;;;148      */
;;;149    void IWDG_Enable(void)
000000  f64c40cc          MOV      r0,#0xcccc
;;;150    {
;;;151      MDR_IWDG->KR = KR_KEY_Enable;
000004  4901              LDR      r1,|L1.12|
000006  6008              STR      r0,[r1,#0]
;;;152    }
000008  4770              BX       lr
;;;153    
                          ENDP

00000a  0000              DCW      0x0000
                  |L1.12|
                          DCD      0x40068000

                          AREA ||i.IWDG_GetFlagStatus||, CODE, READONLY, ALIGN=2

                  IWDG_GetFlagStatus PROC
;;;161      */
;;;162    FlagStatus IWDG_GetFlagStatus(uint32_t IWDG_FLAG)
000000  4601              MOV      r1,r0
;;;163    {
;;;164      FlagStatus bitstatus;
;;;165      /* Check the parameters */
;;;166      assert_param(IS_IWDG_FLAG(IWDG_FLAG));
;;;167      if ((MDR_IWDG->SR & IWDG_FLAG) != (uint32_t)RESET)
000002  4a04              LDR      r2,|L2.20|
000004  68d2              LDR      r2,[r2,#0xc]
000006  400a              ANDS     r2,r2,r1
000008  b10a              CBZ      r2,|L2.14|
;;;168      {
;;;169        bitstatus = SET;
00000a  2001              MOVS     r0,#1
00000c  e000              B        |L2.16|
                  |L2.14|
;;;170      }
;;;171      else
;;;172      {
;;;173        bitstatus = RESET;
00000e  2000              MOVS     r0,#0
                  |L2.16|
;;;174      }
;;;175      /* Return the flag status */
;;;176      return bitstatus;
;;;177    }
000010  4770              BX       lr
;;;178    
                          ENDP

000012  0000              DCW      0x0000
                  |L2.20|
                          DCD      0x40068000

                          AREA ||i.IWDG_ReloadCounter||, CODE, READONLY, ALIGN=2

                  IWDG_ReloadCounter PROC
;;;138      */
;;;139    void IWDG_ReloadCounter(void)
000000  f64a20aa          MOV      r0,#0xaaaa
;;;140    {
;;;141      MDR_IWDG->KR = KR_KEY_Reload;
000004  4901              LDR      r1,|L3.12|
000006  6008              STR      r0,[r1,#0]
;;;142    }
000008  4770              BX       lr
;;;143    
                          ENDP

00000a  0000              DCW      0x0000
                  |L3.12|
                          DCD      0x40068000

                          AREA ||i.IWDG_SetPrescaler||, CODE, READONLY, ALIGN=2

                  IWDG_SetPrescaler PROC
;;;110      */
;;;111    void IWDG_SetPrescaler(uint32_t IWDG_Prescaler)
000000  4901              LDR      r1,|L4.8|
;;;112    {
;;;113      /* Check the parameters */
;;;114      assert_param(IS_IWDG_PRESCALER(IWDG_Prescaler));
;;;115    
;;;116      MDR_IWDG->PR = IWDG_Prescaler;
000002  6048              STR      r0,[r1,#4]
;;;117    }
000004  4770              BX       lr
;;;118    
                          ENDP

000006  0000              DCW      0x0000
                  |L4.8|
                          DCD      0x40068000

                          AREA ||i.IWDG_SetReload||, CODE, READONLY, ALIGN=2

                  IWDG_SetReload PROC
;;;124      */
;;;125    void IWDG_SetReload(uint32_t Reload)
000000  4901              LDR      r1,|L5.8|
;;;126    {
;;;127      /* Check the parameters */
;;;128      assert_param(IS_IWDG_RELOAD(Reload));
;;;129    
;;;130      MDR_IWDG->RLR = Reload;
000002  6088              STR      r0,[r1,#8]
;;;131    }
000004  4770              BX       lr
;;;132    
                          ENDP

000006  0000              DCW      0x0000
                  |L5.8|
                          DCD      0x40068000

                          AREA ||i.IWDG_WriteAccessDisable||, CODE, READONLY, ALIGN=2

                  IWDG_WriteAccessDisable PROC
;;;92       */
;;;93     void IWDG_WriteAccessDisable(void)
000000  2000              MOVS     r0,#0
;;;94     {
;;;95       MDR_IWDG->KR = KR_KEY_WriteDisable;
000002  4901              LDR      r1,|L6.8|
000004  6008              STR      r0,[r1,#0]
;;;96     }
000006  4770              BX       lr
;;;97     
                          ENDP

                  |L6.8|
                          DCD      0x40068000

                          AREA ||i.IWDG_WriteAccessEnable||, CODE, READONLY, ALIGN=2

                  IWDG_WriteAccessEnable PROC
;;;82       */
;;;83     void IWDG_WriteAccessEnable(void)
000000  f2455055          MOV      r0,#0x5555
;;;84     {
;;;85       MDR_IWDG->KR = KR_KEY_WriteEnable;
000004  4901              LDR      r1,|L7.12|
000006  6008              STR      r0,[r1,#0]
;;;86     }
000008  4770              BX       lr
;;;87     
                          ENDP

00000a  0000              DCW      0x0000
                  |L7.12|
                          DCD      0x40068000

;*** Start embedded assembler ***

#line 1 "C:\\Keil_v5\\ARM\\PACK\\Keil\\MDR1986BExx\\1.4\\Libraries\\MDR32F9Qx_StdPeriph_Driver\\src\\MDR32F9Qx_iwdg.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___16_MDR32F9Qx_iwdg_c_16c9fce5____REV16|
#line 447 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.0.1\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___16_MDR32F9Qx_iwdg_c_16c9fce5____REV16| PROC
#line 448

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___16_MDR32F9Qx_iwdg_c_16c9fce5____REVSH|
#line 462
|__asm___16_MDR32F9Qx_iwdg_c_16c9fce5____REVSH| PROC
#line 463

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___16_MDR32F9Qx_iwdg_c_16c9fce5____RRX|
#line 649
|__asm___16_MDR32F9Qx_iwdg_c_16c9fce5____RRX| PROC
#line 650

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
